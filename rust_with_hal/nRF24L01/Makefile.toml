# Author: Yusef Karim
[env]
RX_ELF    = "target/${CARGO_MAKE_CRATE_TARGET_TRIPLE}/debug/rx"
RX_BIN    = "target/${CARGO_MAKE_CRATE_TARGET_TRIPLE}/debug/rx.bin"
TX_ELF    = "target/${CARGO_MAKE_CRATE_TARGET_TRIPLE}/debug/tx"
TX_BIN    = "target/${CARGO_MAKE_CRATE_TARGET_TRIPLE}/debug/tx.bin"
OPENOCD_INTF  = "-f interface/stlink-v2.cfg"
OPENOCD_TRGT  = "-f target/stm32f4x.cfg"
OPENOCD_CMD   = "openocd ${OPENOCD_INTF} ${OPENOCD_TRGT} -c"
GDB_CMD       = "arm-none-eabi-gdb -q"

[tasks.rx]
dependencies = ["build", "rx_bin"]
script = ["${OPENOCD_CMD} \"program ${RX_BIN} reset exit 0x08000000\""]

[tasks.tx]
dependencies = ["build", "tx_bin"]
script = ["${OPENOCD_CMD} \"program ${TX_BIN} reset exit 0x08000000\""]

[tasks.rx_bin]
command = "cargo"
args = ["objcopy", "--bin", "rx", "--", "-O", "binary", "${RX_BIN}"]

[tasks.tx_bin]
command = "cargo"
args = ["objcopy", "--bin", "tx", "--", "-O", "binary", "${TX_BIN}"]

[tasks.erase]
description = "Uses OpenOCD to erase all flash memory on target board"
script = ["${OPENOCD_CMD} \"init; reset halt; stm32f4x mass_erase 0; exit\""]


[tasks.host]
description = "Use semi-hosting to see debug output, requires STlink debugger"
script = ["${OPENOCD_CMD} \"init; arm semihosting enable\""]


[tasks.attach]
description = "Attach to running OpenOCD server via GDB"
script = ["${GDB_CMD} ${RX_ELF} -ex \"target remote localhost:3333\""]
